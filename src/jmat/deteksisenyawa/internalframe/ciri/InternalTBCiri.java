/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package jmat.deteksisenyawa.internalframe.ciri;

import com.stripbandunk.jwidget.JDynamicTable;
import com.stripbandunk.jwidget.model.DynamicTableModel;
import java.beans.PropertyVetoException;
import java.util.List;
import java.util.concurrent.ExecutionException;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import jmat.deteksisenyawa.dao.DaoCiri;
import jmat.deteksisenyawa.entity.EntityCiri;
import jmat.deteksisenyawa.entity.EntitySenyawa;
import jmat.deteksisenyawa.frame.DeteksiSenyawa;
import jmat.deteksisenyawa.helper.HelperConnection;
import jmat.deteksisenyawa.internalframe.rule.InternalRule;
import org.apache.log4j.Logger;

/**
 *
 * @author hasani
 */
public class InternalTBCiri extends javax.swing.JInternalFrame {

    /**
     * Creates new form InternalTBCiri
     */
    private DynamicTableModel<EntityCiri> tabelModelCiri;
    private DeteksiSenyawa deteksiSenyawa;
    private static final Logger LOGGER = Logger.getLogger(InternalTBCiri.class);

    public InternalTBCiri() {
        initComponents();
        setTabelModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void setTabelModel() {
        tabelModelCiri = new DynamicTableModel<>(EntityCiri.class);
        tabelCiri.setDynamicModel(tabelModelCiri);
        tabelCiri.setShowGrid(true);
        tabelCiri.setRowHeight(24);
    }

    public void loadCiri() {
        new SwingWorker<List<EntityCiri>, Object>() {
            @Override
            protected List<EntityCiri> doInBackground() throws Exception {
                DaoCiri daoCiri;
                daoCiri = HelperConnection.getDaoCiri();
                List<EntityCiri> all;
                Thread.sleep(250);
                all = daoCiri.getAll();
                return all;
            }

            @Override
            protected void done() {
                try {
                    tabelModelCiri.clear();
                    for (EntityCiri enCri : get()) {
                        tabelModelCiri.add(enCri);
                    }
                } catch (InterruptedException | ExecutionException ex) {
                    LOGGER.error(ex.getMessage(), ex);
                }
            }
        }.execute();
    }

    public void loadCari(final String penjelasan) {
        new SwingWorker<List<EntityCiri>, Object>() {
            @Override
            protected List<EntityCiri> doInBackground() throws Exception {
                DaoCiri daoCiri;
                daoCiri = HelperConnection.getDaoCiri();
                List<EntityCiri> getCari;
                Thread.sleep(250);
                getCari = daoCiri.getSearch(penjelasan);
                return getCari;
            }

            @Override
            protected void done() {
                try {
                    if (!get().isEmpty()) {

                        tabelModelCiri.clear();
                        for (EntityCiri enCri : get()) {
                            tabelModelCiri.add(enCri);
                        }
                    } else {
                        JOptionPane.showMessageDialog(InternalTBCiri.this, "Data yang dicari tidak ditemukan.",
                                "WARRNING", JOptionPane.WARNING_MESSAGE);
                    }
                } catch (InterruptedException | ExecutionException ex) {
                    LOGGER.error(ex.getMessage(), ex);
                }
            }
        }.execute();
    }

    private int[] validasiRunDelete() {
        int[] selectedRows = null;
        int rowCount = tabelCiri.getRowCount();
        int selectedRowCount = tabelCiri.getSelectedRowCount();
        if (rowCount > 0) {
            if (selectedRowCount > 0) {
                selectedRows = tabelCiri.getSelectedRows();
            }
        }
        return selectedRows;


    }

    private String validasiCari() {
        String cari = null;
        if (!txtCariCiri.getText().trim().isEmpty()) {
            cari = txtCariCiri.getText().trim();
        } else {
            JOptionPane.showMessageDialog(this, "Mohon isi kolom pencarian.", "WARRNING", JOptionPane.WARNING_MESSAGE);
        }
        return cari;
    }

    private void deleteCiriSenyawa() {
        int[] validasiRunDelete;
        validasiRunDelete = validasiRunDelete();
        if (validasiRunDelete != null) {
            int showConfirmDialog = JOptionPane.showConfirmDialog(this, "Proses delete data yang terseleksi akan dijalankan ?", "WARRNING", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
            if (JOptionPane.YES_OPTION == showConfirmDialog) {
                for (int index = validasiRunDelete.length - 1; index >= 0; index--) {
                    EntityCiri entityCiri;
                    entityCiri = tabelModelCiri.get(validasiRunDelete[index]);
                    HelperConnection.getDaoCiri().delete(entityCiri.getIdCiri());
                    tabelModelCiri.remove(validasiRunDelete[index]);
                }
                EventIntRule();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Silahkan seleksi data", "WARRNING", JOptionPane.WARNING_MESSAGE);
        }
    }

    private void EventIntRule() {
        if (deteksiSenyawa.internalRule instanceof InternalRule) {
            InternalRule internalRule;
            internalRule = (InternalRule) deteksiSenyawa.internalRule;
            if (internalRule.getListModelCiri().size() > 0) {

                Object selectedItem = internalRule.getComboBoxModelSenyawa().getSelectedItem();
                if (selectedItem instanceof EntitySenyawa) {
                    EntitySenyawa entitySenyawa;
                    entitySenyawa = (EntitySenyawa) selectedItem;
                    internalRule.loadRule(entitySenyawa);
                }
            }
            if (internalRule.getTabelPenjelasan().getRowCount() > 0) {
                internalRule.loadCiriPenjelasan();
            }
        }
    }

    private InternalCiri cekFrame() {
        InternalCiri internalCiri = null;
        if (deteksiSenyawa.internalCiri instanceof InternalCiri) {
            try {
                internalCiri = (InternalCiri) deteksiSenyawa.internalCiri;
                internalCiri.setTitleBaru("Ubah Ciri Suatu Zat");
                internalCiri.setSelected(true);
            } catch (PropertyVetoException ex) {
                LOGGER.error(ex.getMessage(), ex);
            }
        } else {
            if (deteksiSenyawa.getJdPane().getComponentCount() < 2) {
                try {
                    internalCiri = new InternalCiri();
                    internalCiri.setDeteksiSenyawa(deteksiSenyawa);
                    internalCiri.setTitleBaru("Ubah Ciri Suatu Zat");
                    internalCiri.setLocation(deteksiSenyawa.getWidth() / 4, deteksiSenyawa.getHeight() / 6);
                    deteksiSenyawa.getJdPane().add(internalCiri);
                    internalCiri.setVisible(true);
                    internalCiri.setSelected(true);
                    deteksiSenyawa.internalCiri = internalCiri;
                } catch (PropertyVetoException ex) {
                    LOGGER.error(ex.getMessage(), ex);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Proses ini akan membuka jendela menu Ciri,\n"
                        + "silahkan tutup salah satu jendela menu yang terbuka", "WARRNING", JOptionPane.WARNING_MESSAGE);
            }
        }
        return internalCiri;

    }

    private void mappingData(EntityCiri entityCiri) {
        if (cekFrame() instanceof InternalCiri) {
            InternalCiri internalCiri;
            internalCiri = (InternalCiri) cekFrame();
            internalCiri.getTxtIdCiri().setText(entityCiri.getIdCiri().toString());
            internalCiri.getTxtPenjelasan().setText(entityCiri.getPenjelasan());
            internalCiri.setOldCiri(entityCiri.getPenjelasan());

        }
    }

    private EntityCiri validasiEdit() {
        EntityCiri entityCiri = null;
        int rowCount = tabelCiri.getRowCount();
        int selectedRowCount = tabelCiri.getSelectedRowCount();
        if (rowCount > 0) {
            if (selectedRowCount == 1) {
                int selectedRow = tabelCiri.getSelectedRow();
                int convertRowIndexToModel = tabelCiri.convertRowIndexToModel(selectedRow);
                entityCiri = tabelModelCiri.get(convertRowIndexToModel);
            }
        }
        return entityCiri;

    }

    public DeteksiSenyawa getDeteksiSenyawa() {
        return deteksiSenyawa;
    }

    public void setDeteksiSenyawa(DeteksiSenyawa deteksiSenyawa) {
        this.deteksiSenyawa = deteksiSenyawa;
    }

    public DynamicTableModel<EntityCiri> getTabelModelCiri() {
        return tabelModelCiri;
    }

    public JDynamicTable getTabelCiri() {
        return tabelCiri;
    }

    public JButton getBtnCariCiri() {
        return btnCariCiri;
    }

    public JButton getBtnDeleteCiri() {
        return btnDeleteCiri;
    }

    public JButton getBtnEditCiri() {
        return btnEditCiri;
    }

    public JButton getBtnReloadCiri() {
        return btnReloadCiri;
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelLatarTBCiri = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        panelCariTBCiri = new javax.swing.JPanel();
        btnReloadCiri = new javax.swing.JButton();
        btnCariCiri = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtCariCiri = new javax.swing.JTextArea();
        jPanel5 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelCiri = new com.stripbandunk.jwidget.JDynamicTable();
        panelCrudTbCiri = new javax.swing.JPanel();
        btnEditCiri = new javax.swing.JButton();
        btnDeleteCiri = new javax.swing.JButton();

        setClosable(true);
        setTitle("TB Ciri");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        btnReloadCiri.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        btnReloadCiri.setText("Reload");
        btnReloadCiri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReloadCiriActionPerformed(evt);
            }
        });

        btnCariCiri.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        btnCariCiri.setText("Cari");
        btnCariCiri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCariCiriActionPerformed(evt);
            }
        });

        txtCariCiri.setColumns(20);
        txtCariCiri.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        txtCariCiri.setRows(5);
        jScrollPane2.setViewportView(txtCariCiri);

        javax.swing.GroupLayout panelCariTBCiriLayout = new javax.swing.GroupLayout(panelCariTBCiri);
        panelCariTBCiri.setLayout(panelCariTBCiriLayout);
        panelCariTBCiriLayout.setHorizontalGroup(
            panelCariTBCiriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCariTBCiriLayout.createSequentialGroup()
                .addContainerGap(71, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnReloadCiri)
                .addContainerGap())
            .addGroup(panelCariTBCiriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelCariTBCiriLayout.createSequentialGroup()
                    .addGap(9, 9, 9)
                    .addComponent(btnCariCiri)
                    .addContainerGap(375, Short.MAX_VALUE)))
        );
        panelCariTBCiriLayout.setVerticalGroup(
            panelCariTBCiriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCariTBCiriLayout.createSequentialGroup()
                .addGroup(panelCariTBCiriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnReloadCiri)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 24, Short.MAX_VALUE))
            .addGroup(panelCariTBCiriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelCariTBCiriLayout.createSequentialGroup()
                    .addGap(2, 2, 2)
                    .addComponent(btnCariCiri)
                    .addContainerGap(84, Short.MAX_VALUE)))
        );

        jPanel3.add(panelCariTBCiri);

        jPanel5.setLayout(new java.awt.BorderLayout());

        tabelCiri.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tabelCiri);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 584, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 391, Short.MAX_VALUE)
        );

        jPanel5.add(jPanel4, java.awt.BorderLayout.CENTER);

        btnEditCiri.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        btnEditCiri.setText("Edit");
        btnEditCiri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditCiriActionPerformed(evt);
            }
        });
        panelCrudTbCiri.add(btnEditCiri);

        btnDeleteCiri.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        btnDeleteCiri.setText("Delete");
        btnDeleteCiri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteCiriActionPerformed(evt);
            }
        });
        panelCrudTbCiri.add(btnDeleteCiri);

        javax.swing.GroupLayout panelLatarTBCiriLayout = new javax.swing.GroupLayout(panelLatarTBCiri);
        panelLatarTBCiri.setLayout(panelLatarTBCiriLayout);
        panelLatarTBCiriLayout.setHorizontalGroup(
            panelLatarTBCiriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(panelLatarTBCiriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(panelCrudTbCiri, javax.swing.GroupLayout.DEFAULT_SIZE, 617, Short.MAX_VALUE))
        );
        panelLatarTBCiriLayout.setVerticalGroup(
            panelLatarTBCiriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLatarTBCiriLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(73, Short.MAX_VALUE))
            .addGroup(panelLatarTBCiriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLatarTBCiriLayout.createSequentialGroup()
                    .addGap(0, 548, Short.MAX_VALUE)
                    .addComponent(panelCrudTbCiri, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        getContentPane().add(panelLatarTBCiri, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnReloadCiriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReloadCiriActionPerformed
        // TODO add your handling code here:
        loadCiri();
        txtCariCiri.setText("");
    }//GEN-LAST:event_btnReloadCiriActionPerformed

    private void btnCariCiriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCariCiriActionPerformed
        // TODO add your handling code here:
        if (validasiCari() instanceof String) {
            String string;
            string = (String) validasiCari();
            loadCari(string);
        }
    }//GEN-LAST:event_btnCariCiriActionPerformed

    private void btnEditCiriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditCiriActionPerformed
        // TODO add your handling code here:
        if (validasiEdit() instanceof EntityCiri) {
            EntityCiri entityCiri;
            entityCiri = (EntityCiri) validasiEdit();
            mappingData(entityCiri);
        } else {
            tabelCiri.clearSelection();
            JOptionPane.showMessageDialog(this, "Silahkan seleksi salah satu data", "WARRNING", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnEditCiriActionPerformed

    private void btnDeleteCiriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteCiriActionPerformed
        // TODO add your handling code here:
        deleteCiriSenyawa();
    }//GEN-LAST:event_btnDeleteCiriActionPerformed

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        // TODO add your handling code here:
        deteksiSenyawa.internalTBCiri = null;
        deteksiSenyawa = null;
    }//GEN-LAST:event_formInternalFrameClosed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCariCiri;
    private javax.swing.JButton btnDeleteCiri;
    private javax.swing.JButton btnEditCiri;
    private javax.swing.JButton btnReloadCiri;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel panelCariTBCiri;
    private javax.swing.JPanel panelCrudTbCiri;
    private javax.swing.JPanel panelLatarTBCiri;
    private com.stripbandunk.jwidget.JDynamicTable tabelCiri;
    private javax.swing.JTextArea txtCariCiri;
    // End of variables declaration//GEN-END:variables
}
