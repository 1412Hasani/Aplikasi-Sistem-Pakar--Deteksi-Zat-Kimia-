/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package jmat.deteksisenyawa.frame;

import java.beans.PropertyVetoException;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JMenuBar;
import javax.swing.JOptionPane;
import jmat.deteksisenyawa.internalframe.ciri.InternalCiri;
import jmat.deteksisenyawa.internalframe.ciri.InternalTBCiri;
import jmat.deteksisenyawa.internalframe.hipotesis.InternalH_Senyawa;
import jmat.deteksisenyawa.internalframe.rule.InternalRule;
import jmat.deteksisenyawa.internalframe.senyawa.InternalSenyawa;
import jmat.deteksisenyawa.internalframe.senyawa.InternalTBSenyawa;
import org.apache.log4j.Logger;

/**
 *
 * @author hasani
 */
public class DeteksiSenyawa extends javax.swing.JFrame {

    /**
     * Creates new form DeteksiSenyawa
     */
    private static final Logger LOGGER = Logger.getLogger(DeteksiSenyawa.class);
    public InternalSenyawa internalSenyawa;
    public InternalTBSenyawa internalTBSenyawa;
    public InternalCiri internalCiri;
    public InternalTBCiri internalTBCiri;
    public InternalRule internalRule;
    public InternalH_Senyawa internalH_Senyawa;
    
    public DeteksiSenyawa() {
        initComponents();
        staticFrame();
    }
    
    private void staticFrame() {
        this.setLocationRelativeTo(null);
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        
    }
    
    public JDesktopPane getJdPane() {
        return jdPane;
    }
    
    public JMenuBar getjMenuBar1() {
        return jMenuBar1;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jdPane = new javax.swing.JDesktopPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuFile = new javax.swing.JMenu();
        itemMenuExit = new javax.swing.JMenuItem();
        menuSistem = new javax.swing.JMenu();
        itemMenuSenyawa = new javax.swing.JMenuItem();
        itemMenuCiri = new javax.swing.JMenuItem();
        itemMenu = new javax.swing.JMenuItem();
        menuTabel = new javax.swing.JMenu();
        menuItemTbSenyawa = new javax.swing.JMenuItem();
        itemMenuTbCiri = new javax.swing.JMenuItem();
        menuCreateHipotesis = new javax.swing.JMenu();
        itemMenuH_Senyawa = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sistem Pakar Deteksi Nama Zat Kimia");
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setLayout(new java.awt.BorderLayout());
        jPanel1.add(jdPane, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        menuFile.setText("File");
        menuFile.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N

        itemMenuExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        itemMenuExit.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        itemMenuExit.setText("Exit");
        itemMenuExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemMenuExitActionPerformed(evt);
            }
        });
        menuFile.add(itemMenuExit);

        jMenuBar1.add(menuFile);

        menuSistem.setText("Sistem");
        menuSistem.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N

        itemMenuSenyawa.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        itemMenuSenyawa.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        itemMenuSenyawa.setText("Zat");
        itemMenuSenyawa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemMenuSenyawaActionPerformed(evt);
            }
        });
        menuSistem.add(itemMenuSenyawa);

        itemMenuCiri.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        itemMenuCiri.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        itemMenuCiri.setText("Ciri");
        itemMenuCiri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemMenuCiriActionPerformed(evt);
            }
        });
        menuSistem.add(itemMenuCiri);

        itemMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        itemMenu.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        itemMenu.setText("Rule");
        itemMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemMenuActionPerformed(evt);
            }
        });
        menuSistem.add(itemMenu);

        jMenuBar1.add(menuSistem);

        menuTabel.setText("View Tabel");
        menuTabel.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N

        menuItemTbSenyawa.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        menuItemTbSenyawa.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        menuItemTbSenyawa.setText("TB_Zat");
        menuItemTbSenyawa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemTbSenyawaActionPerformed(evt);
            }
        });
        menuTabel.add(menuItemTbSenyawa);

        itemMenuTbCiri.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        itemMenuTbCiri.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        itemMenuTbCiri.setText("TB_Ciri");
        itemMenuTbCiri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemMenuTbCiriActionPerformed(evt);
            }
        });
        menuTabel.add(itemMenuTbCiri);

        jMenuBar1.add(menuTabel);

        menuCreateHipotesis.setText("Create Hipotesis");
        menuCreateHipotesis.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N

        itemMenuH_Senyawa.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        itemMenuH_Senyawa.setText("H_Zat");
        itemMenuH_Senyawa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemMenuH_SenyawaActionPerformed(evt);
            }
        });
        menuCreateHipotesis.add(itemMenuH_Senyawa);

        jMenuBar1.add(menuCreateHipotesis);

        setJMenuBar(jMenuBar1);

        getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void itemMenuExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemMenuExitActionPerformed
        // TODO add your handling code here:
        int showConfirmDialog;
        showConfirmDialog = JOptionPane.showConfirmDialog(this, "Anda yakin akan keluar dari aplikasi ini", "CONFIRM", JOptionPane.YES_NO_OPTION);
        if (JOptionPane.YES_OPTION == showConfirmDialog) {
            System.exit(0);
        } else {
            requestFocus();
        }
    }//GEN-LAST:event_itemMenuExitActionPerformed
    
    private void itemMenuSenyawaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemMenuSenyawaActionPerformed
        // TODO add your handling code here:
        if (internalSenyawa == null) {
            try {
                if (jdPane.getComponentCount() < 2) {
                    
                    internalSenyawa = new InternalSenyawa();
                    internalSenyawa.setTitleBaru("Tambah Zat");
                    internalSenyawa.setDeteksiSenyawa(this);
                    internalSenyawa.setLocation(getWidth() / 3, getHeight() / 4);
                    jdPane.add(internalSenyawa);
                    internalSenyawa.setVisible(true);
                    internalSenyawa.setSelected(true);
                } else {
                    JOptionPane.showMessageDialog(this, "Anda hanya bisa membuka 2 jendela menu,"
                            + "\nsilahkan tutup salah satu jendela menu\nuntuk membuka jendela menu yang lain.", "WARRNING", JOptionPane.WARNING_MESSAGE);
                }
            } catch (PropertyVetoException ex) {
                LOGGER.error(ex.getMessage(), ex);
            }
        } else {
            internalSenyawa.toFront();
        }
    }//GEN-LAST:event_itemMenuSenyawaActionPerformed
    
    private void menuItemTbSenyawaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemTbSenyawaActionPerformed
        // TODO add your handling code here:
        if (internalTBSenyawa == null) {
            try {
                if (jdPane.getComponentCount() < 2) {
                    internalTBSenyawa = new InternalTBSenyawa();
                    internalTBSenyawa.setDeteksiSenyawa(this);
                    internalTBSenyawa.setLocation(getWidth() / 4, getHeight() / 6);
                    internalTBSenyawa.loadSenyawa();
                    jdPane.add(internalTBSenyawa);
                    internalTBSenyawa.setVisible(true);
                    internalTBSenyawa.setSelected(true);
                } else {
                    JOptionPane.showMessageDialog(this, "Anda hanya bisa membuka 2 jendela menu,"
                            + "\nsilahkan tutup salah satu jendela menu\nuntuk membuka jendela menu yang lain.", "WARRNING", JOptionPane.WARNING_MESSAGE);
                }
            } catch (PropertyVetoException ex) {
                LOGGER.error(ex.getMessage(), ex);
            }
            
        } else {
            internalTBSenyawa.toFront();
            
        }
    }//GEN-LAST:event_menuItemTbSenyawaActionPerformed
    
    private void itemMenuCiriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemMenuCiriActionPerformed
        // TODO add your handling code here:
        if (internalCiri == null) {
            try {
                if (jdPane.getComponentCount() < 2) {
                    internalCiri = new InternalCiri();
                    internalCiri.setDeteksiSenyawa(this);
                    internalCiri.setTitleBaru("Tambah Ciri Suatu Zat");
                    internalCiri.setLocation(getWidth() / 4, getHeight() / 6);
                    jdPane.add(internalCiri);
                    internalCiri.setVisible(true);
                    internalCiri.setSelected(true);
                } else {
                    JOptionPane.showMessageDialog(this, "Anda hanya bisa membuka 2 jendela menu,"
                            + "\nsilahkan tutup salah satu jendela menu\nuntuk membuka jendela menu yang lain.", "WARRNING", JOptionPane.WARNING_MESSAGE);
                }
            } catch (PropertyVetoException ex) {
                LOGGER.error(ex.getMessage(), ex);
            }
            
        } else {
            internalCiri.toFront();
            
        }
    }//GEN-LAST:event_itemMenuCiriActionPerformed
    
    private void itemMenuTbCiriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemMenuTbCiriActionPerformed
        // TODO add your handling code here:
        if (internalTBCiri == null) {
            try {
                if (jdPane.getComponentCount() < 2) {
                    internalTBCiri = new InternalTBCiri();
                    internalTBCiri.setDeteksiSenyawa(this);
                    internalTBCiri.setLocation(getWidth() / 4, getHeight() / 12);
                    internalTBCiri.loadCiri();
                    jdPane.add(internalTBCiri);
                    internalTBCiri.setVisible(true);
                    internalTBCiri.setSelected(true);
                } else {
                    JOptionPane.showMessageDialog(this, "Anda hanya bisa membuka 2 jendela menu,"
                            + "\nsilahkan tutup salah satu jendela menu\nuntuk membuka jendela menu yang lain.", "WARRNING", JOptionPane.WARNING_MESSAGE);
                }
            } catch (PropertyVetoException ex) {
                LOGGER.error(ex.getMessage(), ex);
            }
            
        } else {
            internalTBCiri.toFront();
            
        }
    }//GEN-LAST:event_itemMenuTbCiriActionPerformed
    
    private void itemMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemMenuActionPerformed
        // TODO add your handling code here:
        if (internalRule == null) {
            try {
                if (jdPane.getComponentCount() < 2) {
                    internalRule = new InternalRule();
                    internalRule.setDeteksiSenyawa(this);
                    internalRule.setTitleBaru("Rule Senyawa");
                    internalRule.setLocation(getWidth() / 16, getHeight() / 17);
                    internalRule.loadCiriPenjelasan();
                    internalRule.loadSenyawa();
                    jdPane.add(internalRule);
                    internalRule.setVisible(true);
                    internalRule.setSelected(true);
                } else {
                    JOptionPane.showMessageDialog(this, "Anda hanya bisa membuka 2 jendela menu,"
                            + "\nsilahkan tutup salah satu jendela menu\nuntuk membuka jendela menu yang lain.", "WARRNING", JOptionPane.WARNING_MESSAGE);
                }
            } catch (PropertyVetoException ex) {
                LOGGER.error(ex.getMessage(), ex);
            }
            
        } else {
            internalRule.toFront();
            
        }
    }//GEN-LAST:event_itemMenuActionPerformed
    
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        int showConfirmDialog;
        showConfirmDialog = JOptionPane.showConfirmDialog(this, "Anda yakin akan keluar dari aplikasi ini", "CONFIRM", JOptionPane.YES_NO_OPTION);
        if (JOptionPane.YES_OPTION == showConfirmDialog) {
            System.exit(0);
        } else {
            setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
            
            
        }
    }//GEN-LAST:event_formWindowClosing
    private Integer deteksiComponenInDestopPane() {
        Integer cek;
        if (internalSenyawa instanceof InternalSenyawa
                || internalTBSenyawa instanceof InternalTBSenyawa
                || internalCiri instanceof InternalCiri
                || internalTBCiri instanceof InternalTBCiri
                || internalRule instanceof InternalRule) {
            cek = JOptionPane.showConfirmDialog(this,
                    "Untuk membuat hipostes senyawa membutuhkan banyak memori di JVM,\n"
                    + "tutup jendela yang terbuka ?", "WARRNING",
                    JOptionPane.WARNING_MESSAGE, JOptionPane.YES_NO_OPTION);
            if (cek == JOptionPane.YES_OPTION) {
                disposeMenu();
            }
        } else {
            cek = 0;
        }
        return cek;
        
    }
    
    private void disposeMenu() {
        if (internalSenyawa instanceof InternalSenyawa) {
            internalSenyawa.dispose();
        }
        if (internalTBSenyawa instanceof InternalTBSenyawa) {
            internalTBSenyawa.dispose();
        }
        if (internalCiri instanceof InternalCiri) {
            internalCiri.dispose();
        }
        if (internalTBCiri instanceof InternalTBCiri) {
            internalTBCiri.dispose();
        }
        if (internalRule instanceof InternalRule) {
            internalRule.dispose();
        }
    }
    
    private void openMenuHipotesis() {
        if (internalH_Senyawa == null) {
            try {
                internalH_Senyawa = new InternalH_Senyawa();
                internalH_Senyawa.setDeteksiSenyawa(this);
                internalH_Senyawa.setLocation(getWidth() / 6, getHeight() / 6);
                jdPane.add(internalH_Senyawa);
                internalH_Senyawa.setVisible(true);
                internalH_Senyawa.setSelected(true);
            } catch (PropertyVetoException ex) {
                LOGGER.error(ex.getMessage(), ex);
            }
            
        } else {
            internalH_Senyawa.toFront();
            
        }
    }
    private void itemMenuH_SenyawaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemMenuH_SenyawaActionPerformed
        // TODO add your handling code here:
        if (jdPane.getComponentCount() > 0) {
            
            if (deteksiComponenInDestopPane() == 0) {
                this.jMenuBar1.setVisible(false);
                openMenuHipotesis();
            } else {
                this.requestFocus();
            }
        } else {
            this.jMenuBar1.setVisible(false);
            openMenuHipotesis();
        }
    }//GEN-LAST:event_itemMenuH_SenyawaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DeteksiSenyawa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new DeteksiSenyawa().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem itemMenu;
    private javax.swing.JMenuItem itemMenuCiri;
    private javax.swing.JMenuItem itemMenuExit;
    private javax.swing.JMenuItem itemMenuH_Senyawa;
    private javax.swing.JMenuItem itemMenuSenyawa;
    private javax.swing.JMenuItem itemMenuTbCiri;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JDesktopPane jdPane;
    private javax.swing.JMenu menuCreateHipotesis;
    private javax.swing.JMenu menuFile;
    private javax.swing.JMenuItem menuItemTbSenyawa;
    private javax.swing.JMenu menuSistem;
    private javax.swing.JMenu menuTabel;
    // End of variables declaration//GEN-END:variables
}
